function [ DSTATS ] = gdsi_calculate_FS_metrics_Subcortical_v3( DSTATS, DATAOUT, aparcaseg, fslabels, MetricsList, LabelsList )
% 
% [ DSTATS ] = gdsi_calculate_FS_metrics_Subcortical_v3( DSTATS, DATAOUT, aparcaseg, fslabels, MetricsList, LabelsList )
% 
%  dstats is struct to save outputs to, metricslist is list of metrics to
%  evaluate, labelslist is list of labels to evaluate
% 
% Calculates metrics across different FS subcortical labels, save to DSTATS
%  struct
% - mean 1D EAP profile, mean 1D GenAniso profile, etc.

% DSTATS=[]
% 
% MetricsList = {'Rvec','Rstd','KurtProfile', ...
%     'MeanEAP','MeanGA','RTOP', 'sintheta','GaussDiv', ...
%     'MeanKurt','MSD', 'MFD', ...
%     'HWHM','HWHMmin','HWHMmax','HWHMminmax','HWHMstd'};
% 
% LabelsList = {'wm.all','wm.lh','wm.rh','ctx.all','ctx.rh','ctx.lh', ...
%     'csf.all','csf.orig','ventricles.all','ventricles.lh','ventricles.rh', ...
%     'cerebellum.wm.lh','cerebellum.wm.rh','cerebellum.wm.all', ...
%     'cerebellum.ctx.lh','cerebellum.ctx.rh','cerebellum.ctx.all', ...
%     'brainstem','cc', 'cc_post', 'cc_midpost', 'cc_central', 'cc_midant', 'cc_ant', ...
%     'subcort.thalamus.lh','subcort.thalamus.rh','subcort.thalamus.all', ...
%     'subcort.putamen.lh','subcort.putamen.rh','subcort.putamen.all', ...
%     'subcort.caudate.lh','subcort.caudate.rh','subcort.caudate.all', ...
%     'subcort.pallidum.lh','subcort.pallidum.rh','subcort.pallidum.all', ...
%     'subcort.hippocampus.lh','subcort.hippocampus.rh','subcort.hippocampus.all', ...
%     'subcort.amygdala.lh','subcort.amygdala.rh','subcort.amygdala.all', ...
%     'subcort.accumbens.lh','subcort.accumbens.rh','subcort.accumbens.all', ...
%     'subcort.ventraldc.lh','subcort.ventraldc.rh','subcort.ventraldc.all', ...
%     }; % no fornix labels found!!!

tic
for mm=1:length(MetricsList)
    currMetric = MetricsList{mm};
    eval(['currm = DATAOUT.' currMetric ';']);
    for ll=1:length(LabelsList)
        currLabel = LabelsList{ll};
        currl = eval(['fslabels. ' currLabel ';']);
        eval('[ curr ] = mask_with_FS_label( currm, aparcaseg, currl );');
        if strcmp(currMetric,'Rvec')
            outm= 'Rmean';
        else
            outm= currMetric;
        end
        eval(['DSTATS. ' outm '.' currLabel ' = mean(curr,1); ']);
        eval(['DSTATS. ' outm '_std.' currLabel ' = std(curr,0,1); ']);
    end
end
toc
